[versions]
okioVer = "3.5.0"
moshiVer = "1.15.0"
okHttpVer = "2.7.5"
okHttp3Ver = "4.11.0"
mockServerVer = "4.11.0"
retrofitVer = "2.9.0"
jsonVer = "20230618"
log4j2Ver = "2.20.0"

sonatypeVersion = "1.3.0"
sonarcubeVersion = "4.4.1.3373"
testLoggerVersion = "3.2.0"

apacheMimeVer = "4.5.14"
apacheClientVer = "4.5.14"
apacheAsyncClientVer = "4.1.5"

junitParamsVer = "1.1.1"
juniVer = "4.13.2"
assertJVer = "3.24.2"
sparcVer = "2.9.4"

codeQualityVer = "0.23.0"
detekt = "1.0.0"
ktlint = "0.32.0"
pmd = "6.55.0"
checkstyle = "10.12.3"
jacoco = "0.8.10"

[libraries]
json = { group = "org.json", name = "json", version.ref = "jsonVer" }
okio = { group = "com.squareup.okio", name = "okio", version.ref = "okioVer" }
moshi = { group = "com.squareup.moshi", name = "moshi", version.ref = "moshiVer" }
moshi-adapters = { group = "com.squareup.moshi", name = "moshi-adapters", version.ref = "moshiVer" }

okhttp = { group = "com.squareup.okhttp", name = "okhttp", version.ref = "okHttpVer" }
okhttp-interceptor = { group = "com.squareup.okhttp", name = "logging-interceptor", version.ref = "okHttpVer" }

okhttp3-interceptor = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okHttp3Ver" }
mock-webserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "mockServerVer" }

retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVer" }
retrofit-xml = { module = "com.squareup.retrofit2:converter-jaxb", version.ref = "retrofitVer" }
retrofit-json = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofitVer" }
retrofit-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofitVer" }

apache-mime = { group = "org.apache.httpcomponents", name = "httpmime", version.ref = "apacheMimeVer" }
apache-client = { group = "org.apache.httpcomponents", name = "httpclient", version.ref = "apacheClientVer" }
apache-async-client = { group = "org.apache.httpcomponents", name = "httpasyncclient", version.ref = "apacheAsyncClientVer" }

log4j2-core = { group = "org.apache.logging.log4j", name = "log4j-core", version.ref = "log4j2Ver" }
assertj = { group = "org.assertj", name = "assertj-core", version.ref = "assertJVer" }
sparc = { group = "com.sparkjava", name = "spark-core", version.ref = "sparcVer" }
junit = { group = "junit", name = "junit", version.ref = "juniVer" }
junit-params = { group = "pl.pragmatists", name = "JUnitParams", version.ref = "junitParamsVer" }

test-logger = { group = "com.adarshr", name = "gradle-test-logger-plugin", version.ref = "testLoggerVersion" }
code-quality = { group = "com.vanniktech", name = "gradle-code-quality-tools-plugin", version.ref = "codeQualityVer" }
nexus = { group = "io.github.gradle-nexus", name = "publish-plugin", version.ref = "sonatypeVersion" }

[plugins]
sonarcube = { id = "org.sonarqube", version.ref = "sonarcubeVersion" }
sonatype = { id = "io.github.gradle-nexus.publish-plugin", version.ref = "sonatypeVersion" }
test-logger-plugin = { id = "com.adarshr.test-logger", version.ref = "testLoggerVersion" }

[bundles]
retrofit = ["retrofit", "retrofit-json", "retrofit-xml", "retrofit-scalars"]
